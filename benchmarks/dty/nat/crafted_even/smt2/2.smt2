(set-logic UFDT)
(declare-datatypes ((nat 0))
  (((zero) (s (s0 nat)))))
(declare-fun add (nat nat) nat)
(declare-fun even (nat) Bool)
(declare-fun mul (nat nat) nat)
(assert (forall ((y nat)) (= (add zero y) y)))
(assert (forall ((x nat) (y nat)) (= (add (s x) y) (s (add x y)))))
(assert (even zero))
(assert (not (even (s zero))))
(assert (forall ((x nat)) (= (even (s (s x))) (even x))))
(assert (forall ((y nat)) (= (mul zero y) zero)))
(assert (forall ((x nat) (y nat)) (= (mul (s x) y) (add (mul x y) y))))
(assert (not (forall ((x nat) (y nat))
  (=> (even y) (even (mul x y)))
)))
(check-sat)
