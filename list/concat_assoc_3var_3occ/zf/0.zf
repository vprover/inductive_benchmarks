data nat := 
  | zero 
  | s nat.
data lst := 
  | nil 
  | cons nat lst.
val app : lst -> lst -> lst.
assert (forall(R:lst). (app nil R) = R).
assert (forall(A:nat). (forall(L:lst). (forall(R:lst). (app (cons A L) R) = (cons A (app L R))))).
goal   (forall(X:lst). (forall(Y:lst). (forall(Z:lst). (app X (app Y Z)) = (app (app X Y) Z)))).
