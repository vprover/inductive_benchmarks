data nat := 
  | zero 
  | s nat.
val add : nat -> nat -> nat.
assert (forall(Y:nat). (add zero Y) = Y).
assert (forall(X:nat). (forall(Y:nat). (add (s X) Y) = (s (add X Y)))).
goal   (forall(X:nat). (add (s X) X) = (s (add X X))).
