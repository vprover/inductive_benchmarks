(set-logic UFDT)
(declare-datatypes ((nat 0)) (((zero) (s (s0 nat)))))
(declare-fun add (nat nat) nat)
(declare-fun leq (nat nat) Bool)
(assert (forall ((y nat)) (= (add zero y) y)))
(assert (forall ((x nat) (y nat)) (= (add (s x) y) (s (add x y)))))
(assert (forall ((y nat)) (leq zero y)))
(assert (forall ((x nat)) (not (leq (s x) zero))))
(assert (forall ((x nat) (y nat)) (= (leq (s x) (s y)) (leq x y))))
(assert (not (forall ((v0 nat) (v1 nat) (v2 nat) (v3 nat) (v4 nat) (v5 nat) (v6 nat) (v7 nat) (v8 nat) (v9 nat) (v10 nat)) (= (add (add (s v0) (s (add (s (add (s (add (s v10) (add (s (s v2)) v7))) (add (s (s (s v6))) v4))) (s (s (s (s (s v3)))))))) (add (s (s (add v5 (s v9)))) (add (s v8) v1))) (add (s (s (s (add (add v4 v0) (s (s v1)))))) (s (s (add (s (s (add (s (add v2 v6)) (add (s (s (s (s v3)))) (s v5))))) (add (s v7) (s (s (add (s v9) (add v10 v8)))))))))))))
(check-sat)
